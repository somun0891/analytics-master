version: 2
models:
  - name: agg_mttr_mttm
    description: Aggregated model for MTTR and MTTM by month and day for project_id 7444821
    columns:
      - name: granularity_level
        description: Granularity of data, either monthly or daily
      - name: date
        description: Either month or date
      - name: incidents
        description: Number of total incidents in project_id 7444821
      - name: resolved_incidents
        description: Number of resolved incidents in project_id 7444821
      - name: mitigated_incidents
        description: Number of mitigated incidents in project_id 7444821
      - name: mttr
        description: Mean time to resolve
      - name: mttm
        description: Mean time to mitigate
  - name: zengrc_assessment
    description: '{{ doc("zengrc_assessments_desc") }}'
    columns:
      - name: assessment_id
        data_tests:
          - not_null
          - unique
  - name: zengrc_audit
    description: '{{ doc("zengrc_audits_desc") }}'
    columns:
      - name: audit_id
        data_tests:
          - not_null
          - unique
  - name: zengrc_control
    description: '{{ doc("zengrc_controls_desc") }}'
    columns:
      - name: control_id
        data_tests:
          - not_null
          - unique
  - name: zengrc_objective
    description: '{{ doc("zengrc_objectives_desc") }}'
    columns:
      - name: objective_id
        data_tests:
          - not_null
          - unique
  - name: zengrc_program
    description: This table is derived from the `zengrc_audits_source`,
      `zengrc_issue_source`, and `zengrc_request_source` table until the program
      is explicitly brought into the data warehouse.
    columns:
      - name: program_id
        data_tests:
          - not_null
          - unique
  - name: zengrc_person
    description: This table is derived from the `zengrc_audit_source`,
      `zengrc_assessment_source`, and `zengrc_requests_source` tables until the
      person object is explicitly brought into the data warehouse.
    columns:
      - name: person_id
        data_tests:
          - not_null
          - unique
  - name: zengrc_assessment_to_assessors
    description: This table lists the many to many relationship between Person, the
      assessor, and an assessment.  Joining this table to Assessment directly
      will result in duplicate rows.
  - name: zengrc_assessment_to_audit
    description: The tables list the many to many relationship between Assessment
      and Audit. Joining this table to Assessment or Audit directly will result
      in duplicate rows.
  - name: zengrc_audit_to_audit_managers
    description: This table lists the many to many relationship between Person, the
      audit manager, and an audit.  Joining this table to Audit directly will
      result in duplicate rows.
  - name: zengrc_control_to_objective
    description: The tables list the many to many relationship between Control and
      Objective. Joining this table to Control or Objective directly will result
      in duplicate rows.
  - name: zengrc_issue
    description: '{{ doc("zengrc_issues_desc") }}'
    columns:
      - name: issue_id
        data_tests:
          - not_null
          - unique
  - name: zengrc_issue_to_audit
    description: The tables list the many to many relationship between Issue and
      Audit. Joining this table to Issue or Audit directly will result in
      duplicate rows.
  - name: zengrc_issue_to_control
    description: The tables list the many to many relationship between Issue and
      Control. Joining this table to Issue or Control directly will result in
      duplicate rows.
  - name: zengrc_issue_to_program
    description: The tables list the many to many relationship between Issue and
      Program. Joining this table to Issue or Program directly will result in
      duplicate rows.
  - name: zengrc_request
    description: '{{ doc("zengrc_requests_desc") }}'
    columns:
      - name: request_id
        data_tests:
          - not_null
          - unique
  - name: zengrc_request_to_assignees
    description: This table lists the many to many relationship between Person, the
      assignee, and an request.  Joining this table to Request directly will
      result in duplicate rows.
  - name: zengrc_request_to_control
    description: The tables list the many to many relationship between Request and
      Control. Joining this table to Request or Control directly will result in
      duplicate rows.
  - name: zengrc_request_to_issue
    description: The tables list the many to many relationship between Request and
      Issue. Joining this table to Request or Issue directly will result in
      duplicate rows.
  - name: zengrc_request_to_requestors
    description: This table lists the many to many relationship between Person, the
      requestor, and an request.  Joining this table to Request directly will
      result in duplicate rows.
  - name: zengrc_risk
    description: '{{ doc("zengrc_risks_desc") }}'
    columns:
      - name: risk_id
        data_tests:
          - not_null
          - unique
  - name: zengrc_programs
    description: '{{ doc("zengrc_programs_desc") }}'
    columns:
      - name: program_id
        data_tests:
          - not_null
          - unique
  - name: zengrc_vendors
    description: '{{ doc("zengrc_vendors_desc") }}'
    columns:
      - name: vendor_id
        data_tests:
          - not_null
          - unique
  - name: zendesk_frt
    description: A model for Zendesk First Reply Time (FRT)
    columns:
      - name: ticket_id
        data_tests:
          - not_null
          - unique
  - name: issues_history
    description: >
      Table containing age metrics & related metadata for gitlab.com internal
      issues. Used for tracking internal work progress for things like
      Engineering Allocation & Corrective Actions These metrics are available
      for individual issues at daily level & can be aggregated up from there
    columns:
      - name: daily_issue_id
        data_tests:
          - not_null
          - unique
  - name: issue_note_cross_reference
    description: A model that extracts cross-references to merge requests, other
      issues, and epics from issue notes. This model is filtered to only include
      issue notes with cross-references
    columns:
      - name: note_id
        data_tests:
          - not_null
          - unique
      - name: note_created_at
        description: The created date of the note containing the cross-reference
      - name: note_updated_at
        description: The updated date of the note containing the cross-reference
      - name: note_author_id
        description: The author id of the note containing the cross-reference
      - name: note_issue_id
        description: The issue id that contains the note entry
      - name: referenced_merge_request_id_array
        description: An array containing all internal merge request ids cross-referenced
          in the note entry
      - name: referenced_issue_id_array
        description: An array containing all internal issue ids cross-reference in the
          note entry
      - name: referenced_epic_id_array
        description: An array containing all internal epic ids cross-reference in the
          note entry
      - name: is_merge_request_reference
        description: A boolean field to indentify a note entry with a merge request
          cross-reference
      - name: is_issue_reference
        description: A boolean field to indentify a note entry with an issue cross-reference
      - name: is_epic_reference
        description: A boolean field to indentify a note entry with an epic cross-reference
  - name: infradev_issues_base
    description: A model to limit GitLab.com issues to only thous relevant to
      infradev engineering team.
  - name: infradev_current_issue_users
    description: A model to generate a list of current assigned users on an issue.
      Not explicitly limited to the infradev team.
  - name: labels_history
    description: A model identify the valid historic range of specific labels.
  - name: infradev_namespace_path
    description: A model to concatenate the full namespace path, up to four levels
      deep.  Not explicitly limited to the infradev team.
  - name: internal_note_awards
    description: A model to expose the awards at the note level.  This table is
      limited to Issues and Merge Requests that are a part of internal GitLab
      projects.
    data_tests:
      - dbt_utils.unique_combination_of_columns:
          combination_of_columns:
            - note_id
            - award_emoji_id
  - name: ha_proxy_metrics
    description: >
      A table of the total bytes out various back end sources in HA Proxy. Bases
      on the query defined at:
      https://gitlab.com/gitlab-com/runbooks/-/blob/master/periodic-thanos-queries/daily-haproxy-bytes.queries.jsonnet        
    data_tests:
      - dbt_utils.unique_combination_of_columns:
          combination_of_columns:
            - backend
            - recorded_at

  - name: leading_organization_entry_dates
    description: The entry and exit dates of organizations that are admitted into
      our Leading Organization program

  - name: internal_issues_enhanced
    description: A model containing all issues. This model includes relevant and
      common flags that are used in engineering metrics.

  - name: internal_merge_requests_enhanced
    description: A base model containing all internal MRs. This model
      includes relevant and common flags that are used in engineering metrics.
    columns:
      - name: merge_request_id
        data_tests:
          - not_null
          - unique
      - name: merge_request_iid
        description: The ID appended to the merge request link
      - name: author_id
        description: The user_id that created the merge request
      - name: is_created_by_bot
        description: Boolean field that identifies whether the merge request was created
          by a bot
      - name: assignee_id
        description: The user_id that is assigned to the merge request
      - name: project_id
        description: The project_id related to the merge request
      - name: target_project_id
        description: The target_project_id related to the merge request
      - name: merge_request_state
        description: The merge_request_state related to the merge request
      - name: created_at
        description: When the merge request was created
      - name: updated_at
        description: When the merge request was updated
      - name: merged_at
        description: When the merge request was merged
      - name: created_month
        description: Which month the merge request was created
      - name: merge_month
        description: Which month the merge request was merged
      - name: days_to_merge
        description: Number of days it takes from when the merge request was created to
          merged
      - name: merge_request_title
        description: Title of merge request
      - name: merge_request_description
        description: Description of merge request
      - name: milestone_id
        description: The milestone_id related to the merge request
      - name: milestone_title
        description: The title of the related milestone_id
      - name: milestone_description
        description: The description of the related milestone_id
      - name: namespace_id
        description: The namespace_id related to the merge request
      - name: labels
        description: The labels on a merge request
      - name: masked_label_title
        description: String version of labels, separated by '|'
      - name: is_community_contribution
        description: Boolean field that identifies whether the merge request is a
          community contribution via labels
      - name: is_security
        description: Boolean field that identifies whether the merge request is related
          to security via labels
      - name: priority_label
        description: The value following a priority label ('priority::%'')
      - name: severity_label
        description: The value following a severity label ('severity::%'')
      - name: group_label
        description: The group that the merge request is related to. This is extracted
          from labels ('group::%''), however, if a group is not in the latest
          yml file, it will be considered undefined.
      - name: section_label
        description: The section that the merge request is related to. This is extracted
          from labels ('section::%''), however, if a group is not in the latest
          yml file, it will be considered undefined.
      - name: stage_label
        description: The stage that the merge request is related to. This is extracted
          from labels ('devops::%''), however, if a group is not in the latest
          yml file, it will be considered undefined.
      - name: type_label
        description: The worktype type classification, defined as either a bug,
          maintenance, or feature.
      - name: subtype_label
        description: The worktype subtype classification that matches a type_label
      - name: visibility_level
        description: Indicate if the merge request lives in a private or public project
      - name: full_group_path
        description: The group path in the merge request URL
      - name: url
        description: Merge request URL
      - name: is_infradev
        description: MR has "infradev" label
      - name: is_customer_related
        description: MR has "customer" label
      - name: days_from_first_commit_to_merge
        description: The time taken from first commit until the MR being merged
      - name: days_from_creation_to_first_review_date
        description: The time taken from MR being created until it being reviewed
      - name: first_review_date
        description: Date of the first review in the MR
      - name: last_reported_date
        description: The last note or update in the MR
      - name: marked_ready_at
        description: The date when the MR is marked ready

  - name: engineering_merge_requests
    description: A model containing all MRs that affect our product. This model
      includes relevant and common flags that are used in engineering metrics.
    columns:
      - name: merge_request_id
        data_tests:
          - not_null
          - unique
      - name: merge_request_iid
        description: The ID appended to the merge request link
      - name: author_id
        description: The user_id that created the merge request
      - name: is_created_by_bot
        description: Boolean field that identifies whether the merge request was created
          by a bot
      - name: assignee_id
        description: The user_id that is assigned to the merge request
      - name: project_id
        description: The project_id related to the merge request
      - name: target_project_id
        description: The target_project_id related to the merge request
      - name: merge_request_state
        description: The merge_request_state related to the merge request
      - name: created_at
        description: When the merge request was created
      - name: updated_at
        description: When the merge request was updated
      - name: merged_at
        description: When the merge request was merged
      - name: created_month
        description: Which month the merge request was created
      - name: merge_month
        description: Which month the merge request was merged
      - name: days_to_merge
        description: Number of days it takes from when the merge request was created to
          merged
      - name: merge_request_title
        description: Title of merge request
      - name: merge_request_description
        description: Description of merge request
      - name: milestone_id
        description: The milestone_id related to the merge request
      - name: milestone_title
        description: The title of the related milestone_id
      - name: milestone_description
        description: The description of the related milestone_id
      - name: namespace_id
        description: The namespace_id related to the merge request
      - name: labels
        description: The labels on a merge request
      - name: masked_label_title
        description: String version of labels, separated by '|'
      - name: is_community_contribution
        description: Boolean field that identifies whether the merge request is a
          community contribution via labels
      - name: is_security
        description: Boolean field that identifies whether the merge request is related
          to security via labels
      - name: priority_label
        description: The value following a priority label ('priority::%'')
      - name: severity_label
        description: The value following a severity label ('severity::%'')
      - name: group_label
        description: The group that the merge request is related to. This is extracted
          from labels ('group::%''), however, if a group is not in the latest
          yml file, it will be considered undefined.
      - name: section_label
        description: The section that the merge request is related to. This is extracted
          from labels ('section::%''), however, if a group is not in the latest
          yml file, it will be considered undefined.
      - name: stage_label
        description: The stage that the merge request is related to. This is extracted
          from labels ('devops::%''), however, if a group is not in the latest
          yml file, it will be considered undefined.
      - name: type_label
        description: The worktype type classification, defined as either a bug,
          maintenance, or feature.
      - name: subtype_label
        description: The worktype subtype classification that matches a type_label
      - name: visibility_level
        description: Indicate if the merge request lives in a private or public project
      - name: full_group_path
        description: The group path in the merge request URL
      - name: url
        description: Merge request URL
  - name: engineering_issues
    description: A model containing all issues that affect our product. This model
      includes relevant and common flags that are used in engineering metrics.
    columns:
      - name: issue_id
        data_tests:
          - not_null
          - unique
      - name: issue_iid
        description: The ID appended to the issue link
      - name: author_id
        description: The user_id that created the issue
      - name: is_created_by_bot
        description: Boolean field that identifies whether the issue was created by a bot
      - name: project_id
        description: The project_id related to the issue
      - name: created_at
        description: When the issue was created
      - name: updated_at
        description: When the issue was updated
      - name: closed_at
        description: When the issue was closed
      - name: created_month
        description: Which month the issue was created
      - name: closed_month
        description: Which month the issue was closed
      - name: days_to_close
        description: Number of days it takes from when the issue was created to closed
      - name: issue_title
        description: Title of issue
      - name: issue_description
        description: Description of issue
      - name: milestone_id
        description: The milestone_id related to the issue
      - name: milestone_title
        description: The title of the related milestone_id
      - name: milestone_description
        description: The description of the related milestone_id
      - name: milestone_start_date
        description: The start date of the milestone
      - name: milestone_due_date
        description: The due date of the milestone
      - name: weight
        description: The weight applied to the issue
      - name: namespace_id
        description: The namespace_id related to the issue
      - name: labels
        description: The labels on a issue
      - name: masked_label_title
        description: String version of labels, separated by '|'
      - name: is_community_contribution
        description: Boolean field that identifies whether the issue is a community
          contribution via labels
      - name: is_security
        description: Boolean field that identifies whether the issue is related to
          security via labels
      - name: priority_label
        description: The value following a priority label ('priority::%'')
      - name: severity_label
        description: The value following a severity label ('severity::%'')
      - name: group_label
        description: The group that the issue is related to. This is extracted from
          labels ('group::%''), however, if a group is not in the latest yml
          file, it will be considered undefined.
      - name: section_label
        description: The section that the issue is related to. This is extracted from
          labels ('section::%''), however, if a group is not in the latest yml
          file, it will be considered undefined.
      - name: stage_label
        description: The stage that the issue is related to. This is extracted from
          labels ('devops::%''), however, if a group is not in the latest yml
          file, it will be considered undefined.
      - name: type_label
        description: The worktype type classification, defined as either a bug,
          maintenance, or feature.
      - name: subtype_label
        description: The worktype subtype classification that matches a type_label
      - name: workflow_label
        description: The workflow label extracted from ('workflow::%') from issues
      - name: visibility_level
        description: Indicate if the issue lives in a private or public project
      - name: full_group_path
        description: The group path in the issue URL
      - name: url
        description: Issue URL
  - name: maintainer_ratios
    description: A model calculating engineer per maintainer ratios.
    columns:
      - name: date
        description: Date
      - name: backend
        description: Count of backend engineers
      - name: frontend
        description: Count of frontend engineers
      - name: backend_maintainer
        description: Count of backend maintainers
      - name: frontend_maintainer
        description: Count of frontend maintainers 
      - name: database_maintainer
        description: Count of database maintainers 
      - name: backend_trainee
        description: Count of backend trainee
      - name: frontend_trainee
        description: Count of frontend trainee
      - name: database_trainee
        description: Count of database trainee
      - name: engineers_per_maintainer_backend
        description: Total engineers divided by count of backend maintainers
      - name: engineers_per_maintainer_frontend
        description: Total engineers divided by count of frontend maintainers
      - name: engineers_per_trainee_backend
        description: Total engineers divided by count of backend trainees
      - name: engineers_per_trainee_frontend
        description: Total engineers divided by count of frontend trainees
  - name: merge_request_rate
    description: A model containing merge request rate by department and group.
    columns:
      - name: merge_month
        description: Month the merge request was merged
      - name: group_name
        description: Group name
      - name: department
        description: Department name
      - name: mrs
        description: Count of merge requests
      - name: employees
        description: Count of employees
      - name: mr_rate
        description: Ratio of mrs to employees
      - name: granularity_level
        description: Department or group
  - name: rpt_gcp_billing_infra_mapping_day
    description: '{{ doc("finops_pipeline_desc_infra") }}'
  - name: rpt_gcp_billing_pl_day
    description: '{{ doc("finops_pipeline_desc_pl_day") }}'
  - name: build_artifacts_pl_daily
    description: '{{ doc("finops_pipeline_desc_ba_pl_daily") }}'
  - name: ci_runners_pl_daily
    description: '{{ doc("finops_pipeline_desc_runners_pl_daily") }}'
  - name: combined_pl_mapping
    description: '{{ doc("finops_pipeline_desc_combined") }}'
  - name: container_registry_pl_daily
    description: '{{ doc("finops_pipeline_desc_container_registry_pl") }}'
  - name: haproxy_backend_pl
    description: '{{ doc("finops_pipeline_desc_haproxy_backend_pl") }}'
  - name: haproxy_backend_ratio_daily
    description: '{{ doc("finops_pipeline_desc_haproxy_backend_ratio") }}'
  - name: infralabel_pl
    description: '{{ doc("finops_pipeline_desc_infralabel_pl") }}'
  - name: namespace_pl_daily
    description: '{{ doc("finops_pipeline_desc_namespace_pl") }}'
  - name: projects_pl
    description: '{{ doc("finops_pipeline_desc_projects_pl") }}'
  - name: repo_storage_pl_daily
    description: '{{ doc("finops_pipeline_desc_repo_storage_pl_daily") }}'
  - name: internal_notes
    description: Table containing Gitlab.com notes from Epics, Issues and Merge
      Requests. It includes the namespace ID and the ultimate parent namespace
      ID.
    columns:
      - name: note_id
        data_tests:
          - not_null
          - unique
      - name: created_at
        data_tests:
          - not_null
      - name: updated_at
        data_tests:
          - not_null
  - name: time_to_first_failure
    description: Table containing data to compute TtFF metric
    columns:
      - name: ci_pipeline_id
        data_tests:
          - not_null
          - unique
  - name: wk_omamori_entity_data
    description: entity_data from the GitLab Omamori application
    columns:
      - name: id
        description: The internal Omamori ID for the entity datum
        data_tests:
          - unique
          - not_null
      - name: entity_id
        description: The external ID of the entity datum
      - name: entity_type
        description: The type of entity datum
      - name: created_at
        description: When the entity datum was first imported to Omamori
        data_tests:
          - not_null
      - name: updated_at
        description: When the entity datum was last synchronized
        data_tests:
          - not_null
      - name: uploaded_at_gcs
        description: Datetime that source parquet file was uploaded to GCS
        data_tests:
          - not_null
  - name: wk_omamori_mitigation_plan_entity_data
    description: mitigation_plan_entity_data from the GitLab Omamori application
    columns:
      - name: id
        description: The ID for the entity datum entry in the mitigation plan
        data_tests:
          - unique
          - not_null
      - name: status
        description: The status of the entity datum in the mitigation plan
      - name: entity_datum_id
        description: The ID of the associated entity datum
      - name: mitigation_plan_id
        description: The ID of the associated mitigation plan
      - name: created_at
        description: When the entity datum was first scheduled for import to the
          mitigation plan
        data_tests:
          - not_null
      - name: updated_at
        description: When the entity datum status was last changed on the mitigation plan
        data_tests:
          - not_null
      - name: uploaded_at_gcs
        description: Datetime that source parquet file was uploaded to GCS
        data_tests:
          - not_null
  - name: wk_omamori_mitigation_plan_tags
    description: mitigation_plan_tags from the GitLab Omamori application
    columns:
      - name: id
        description: The ID for the tags inclusion on the mitigation plan
        data_tests:
          - unique
          - not_null
      - name: created_at
        description: When the tag was added to the mitigation plan
        data_tests:
          - not_null
      - name: updated_at
        data_tests:
          - not_null
      - name: mitigation_plan_id
        description: The ID of the associated mitigation plan
      - name: tag_id
        description: The ID of the associated tag
  - name: wk_omamori_mitigation_plan_template_tags
    description: mitigation_plan_template_tags from the GitLab Omamori application
    columns:
      - name: id
        description: The ID for the tags inclusion on the mitigation plan template
        data_tests:
          - unique
          - not_null
      - name: created_at
        description: When the tag was added to the mitigation plan template
        data_tests:
          - not_null
      - name: updated_at
        data_tests:
          - not_null
      - name: mitigation_plan_template_id
        description: The ID of the associated mitigation plan template
      - name: tag_id
        description: The ID of the associated tag
  - name: wk_omamori_mitigation_plans
    description: mitigation_plans from the GitLab Omamori application
    columns:
      - name: id
        description: The ID for the mitigation plan
        data_tests:
          - unique
          - not_null
      - name: entity_type
        description: The slug of the entity type the mitigation plan is targetting
      - name: priority
        description: The priority of the mitigation plan execution
      - name: status
        description: The status of the mitigation plan
      - name: feature
        description: The product feature the mitigation plan is mitigating
      - name: category
        description: The category of abuse the mitigation plan is mitigating
      - name: last_applied_mitigation_plan_template_id
        description: The ID of the last applied mitigation plan template, if a template
          was applied
      - name: from_rule_evaluation_id
        description: The ID of the rule evaluation that created the mitigation plan, if
          it was created by one
      - name: created_at
        description: When the mitigation plan was created
        data_tests:
          - not_null
      - name: created_by_id
        description: The ID of the user who created the mitigation plan
      - name: reviewed_at
        description: When the mitigation plan was reviewed
      - name: reviewed_by_id
        description: The ID of the user who reviewed the mitigation plan
      - name: executed_at
        description: When the mitigation plan was executed
      - name: executed_by_id
        description: The ID of the user who executed the mitigation plan
      - name: updated_at
        description: When the mitigation plan was last updated
        data_tests:
          - not_null
      - name: uploaded_at_gcs
        description: Datetime that source parquet file was uploaded to GCS
        data_tests:
          - not_null
  - name: wk_omamori_rule_evaluation_matches
    description: rule_evaluation_matches from the GitLab Omamori application
    columns:
      - name: id
        description: The ID for the match on the rule evaluation
      - name: entity_datum_id
        description: The ID of the associated entity datum
      - name: rule_evaluation_id
        description: The ID of the associated rule evaluation
      - name: created_at
        description: When the match was added to the rule evaluation
        data_tests:
          - not_null
      - name: updated_at
        data_tests:
          - not_null
      - name: uploaded_at_gcs
        description: Datetime that source parquet file was uploaded to GCS
        data_tests:
          - not_null
  - name: wk_omamori_rule_evaluations
    description: rule_evaluations from the GitLab Omamori application
    columns:
      - name: id
        description: The ID for the rule evaluation
        data_tests:
          - unique
          - not_null
      - name: rule
        description: The slug of the rule that was evaluated
      - name: outcome
        description: Whether the rule successfuly evaluated, failed or was skipped
      - name: elapsed_ms
        description: How long the rule took to evaluate
      - name: throttled_count
        description: How many matched entities were throttled due to also being matched
          in a recent evaluation of the same rule
      - name: duplicates_removed
        description: How many duplicate entities in the results were removed
      - name: created_at
        description: When the rule evaluation occurred
        data_tests:
          - not_null
      - name: updated_at
        description: When the rule evaluation was last updated
        data_tests:
          - not_null
      - name: uploaded_at_gcs
        description: Datetime that source parquet file was uploaded to GCS
        data_tests:
          - not_null
  - name: wk_omamori_tags
    description: tags from the GitLab Omamori application
    columns:
      - name: id
        description: The ID for the tag
        data_tests:
          - unique
          - not_null
      - name: tag_name
        description: The tag name
      - name: created_at
        description: When the tag was created
        data_tests:
          - not_null
      - name: updated_at
        data_tests:
          - not_null
      - name: uploaded_at_gcs
        description: Datetime that source parquet file was uploaded to GCS
        data_tests:
          - not_null
  - name: wk_omamori_users
    description: users from the GitLab Omamori application
    columns:
      - name: id
        description: The ID for the user
        data_tests:
          - unique
          - not_null
      - name: username
        description: The username of the user (this will be the gitlab email for users
          and end in @omamori for service users)
      - name: full_name
        description: The full name of the user
      - name: user_role
        description: The user's role
      - name: service_user
        description: Whether the user is a service user (API only) or not
      - name: created_at
        description: When the user was created
        data_tests:
          - not_null
      - name: updated_at
        description: When the user was last updated
        data_tests:
          - not_null
      - name: uploaded_at_gcs
        description: Datetime that source parquet file was uploaded to GCS
        data_tests:
          - not_null
  - name: wk_gitlab_prog_lang
    description: |-
      model for the prgramming language dashboard
      copies the CTE in Sisense dashboard
    columns:
      - name: SHARE
        description: ""
      - name: REPOSITORY_LANGUAGE_ID
        description: ""
      - name: PROJECT_ID
        description: ""
      - name: PROGRAMMING_LANGUAGE_ID
        description: ""
      - name: PROGRAMMING_LANGUAGE_NAME
        description: ""
      - name: ULTIMATE_PARENT_NAMESPACE_ID
        description: ""
      - name: REPOSITORY_SIZE
        description: ""
      - name: GITLAB_PLAN_ID
        description: ""
      - name: GITLAB_PLAN_TITLE
        description: ""
      - name: NAMESPACE_NAME
        description: added for filters
      - name: NAMESPACE_IS_INTERNAL
        description: added for filters
      - name: MIRROR
        description: added for filters
      - name: DIM_NAMESPACE_ID
        description: added for filters
  - name: wk_say_do
    description: ""
    columns:
      - name: ISSUE_ID
        description: ID of the issue
      - name: ISSUE_CREATED_AT
        description: Issue created at (date)
      - name: ISSUE_CLOSED_AT
        description: Issue closed at (date)
      - name: LINKED_ISSUE_TITLE
        description: "Title of the issue "
      - name: IS_CLOSED_BEFORE_RELEASE
        description: Was the issue closed before the release? True/False
      - name: LABELS
        description: Issue labels
      - name: WEIGHT
        description: Issue weight
      - name: STAGE
        description: Issue stage
      - name: GROUP_
        description: Issue group
      - name: REMOVED
        description: Is the issue removed? 1/0
      - name: MILESTONE
        description: Issue milestone
  - name: finished_pipelines
    description: join builds, pipelines, and stages to get details of a pipeline's duration
    columns:
      - name: dim_ci_pipeline_id
        description: the identifier for the ci_pipeline
        data_tests:
          - not_null
      - name: pipeline_finished_date
        description: the date the pipeline finished
        data_tests:
          - not_null

  - name: influx_db_all_fabrication_stats
    description: A model containing data for all_fabrication_stats generated from influx db.

  - name: influx_db_all_test_stats
    description: A model containing data for all_test_stats generated from influx db.

  - name: influx_db_main_test_stats
    description: A model containing data for main_test_stats generated from influx db.

  - name: open_merge_request_review_time_base
    description: A model containing review data for all internal merge requests. It also contains most columns from internal_merge_requests_enhanced model.
    columns:
      - name: old_1yr_flag
        description: If the MR has been opened for more than one year then 1 else 0
      - name: days_open
        description: The number of days the MR is opened per date_actual
      - name: days_to_review
        description: The number of days from MR being created until it being reviewed
      - name: days_in_review
        description: The number of days the MR is in review per date_actual
      - name: days_open_p95
        description: The percentile of MR's open days across all MRs

  - name: open_merge_request_review_time
    description: A model containing review data for merge requests that affect our product. 
  
  - name: fabrication_stats_e2e_metrics
    description: A model containing data for fabrication_stats generated from end-to-end test metrics .

  - name: test_stats_e2e_metrics
    description: A model containing data for test_stats and test_metrics data generated from end-to-end tests.

  - name: main_test_stats_e2e_metrics
    description: A model containing data for main_test_stats generated from end-to-end test metrics.
